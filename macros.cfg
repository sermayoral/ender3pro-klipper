##############################
### OVERRIDE BUNDLE MACROS ###
##############################

### _USER_END_PRINT_BEFORE_HEATERS_OFF
# Location: macros_print_end_print.cfg
[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode:
  G1 E-3 F1800; Retract filament to prevent residue from remaining on the piece

[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.\N Descarga el filamento. Nota: cuidado con el PETG, asegurate de inspeccionar la punta del filamento antes de recargar para evitar atascos.
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or not printer.extruder.can_extrude %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}"

    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}

  {% set unload_speed = printer["gcode_macro GLOBAL_VARS"].filament_unload_speed|float * 60 %}
  {% set unload_length = printer["gcode_macro GLOBAL_VARS"].filament_unload_length|float %}
  
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}"
  
  G1 E2 F200    # Extrude a bit
  G1 E-10 F200  # Retract a bit
  
  {% if printer.configfile.settings.extruder.max_extrude_only_distance < printer["gcode_macro GLOBAL_VARS"].filament_unload_length %}
    M117 ERROR max_extrude_only_distance
    RESPOND MSG="Max Extrude Only Distance minor to Unload Lengh... Setting Unload Lengh to Max Extrude Only Distance... Please set your [extruder] section to correct max_extrude_only_distance"
    G1 E-{printer.configfile.settings.extruder.max_extrude_only_distance} F{unload_speed} # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  {% else %}
    G1 E-{unload_length} F{unload_speed} # Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  {% endif %}

  M117 {msg_unload_ok}
  RESPOND MSG="{msg_unload_ok ~ msg_unload_ok_tip}"

  RESTORE_GCODE_STATE NAME=unload_state

#######################
### PERSONAL MACROS ###
#######################

### G29
# Usage: G29
[gcode_macro G29]
description: Performs a bed mesh calibrate saving default profile
gcode:
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=default
  BED_MESH_PROFILE LOAD=default

### LOAD_FILAMENT_T
# Usage: LOAD_FILAMENT_T [TYPE=<material type>]
[gcode_macro LOAD_FILAMENT_T]
description: Loads the filament setting the right temperature by material type
gcode:
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    LOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
  {% else %}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}

### UNLOAD_FILAMENT_T
# Usage: UNLOAD_FILAMENT_T [TYPE=<material type>]
[gcode_macro UNLOAD_FILAMENT_T]
description: Unloads the filament setting the right temperature by material type
gcode:
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    UNLOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
    BEEP R=3
  {% else %}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}


### A partir de aqui las no revisadas ###

[gcode_macro M300]
gcode:
    {% set P = params.P|default(100)|float %}
    SET_PIN PIN=beeper VALUE=1
    G4 P{P}
    SET_PIN PIN=beeper VALUE=0

[gcode_macro BEEP]
description: Emite un pitido.\n Uso BEEP [R=NUMERO DE PITIDOS]
gcode:
    {% if 'output_pin beeper' in printer.configfile.settings and printer["gcode_macro M300"] is defined %}
        {% set R = params.R|default(0)|int %}
        {% for i in range(R) %}
            M300 P200
        {% endfor %}
    {% endif %}
  