# Incluimos las macros oficiales de mainsail
[include mainsail.cfg]

# Incluimos las macros del paquete KAMP_LiTE
[include kamp-lite/Configuration/*.cfg]

# Incluimos las macros de Demon Klippper Essentials Unified
[include demon-klipper/*.cfg]

# Incluimos las variables de Demon Klipper
[include demon-klipper/Other_Files/DEMON_User_Files_SOURCE/*.cfg]

# Incluimos la redefinicion de las variables
[include variables.cfg]

#############################
### OVERRIDE DEMON MACROS ###
#############################

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(180)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(160)|int %}
  {% if printer.print_stats.state in ['printing', 'paused'] or clean_vars.have_you_set_this_up != True %}
    _LOAD_FILAMENT SPEED_MMsec={speed} TEMP={temp} COOL={cool} COOL_TEMP={cool_temp}
  {% else %}
    LOAD_CLEAN SPEED_MMsec={speed} TEMP={temp}
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set clean_vars = printer["gcode_macro _CLEAN_VARIABLES"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(180)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(160)|int %}
  {% if printer.print_stats.state in ['printing', 'paused'] or clean_vars.have_you_set_this_up != True %}
    _UNLOAD_FILAMENT SPEED_MMsec={speed} TEMP={temp} COOL={cool} COOL_TEMP={cool_temp}
  {% else %}
    UNLOAD_CLEAN SPEED_MMsec={speed} TEMP={temp}
  {% endif %}

[gcode_macro _CUSTOM_PRE_LOAD]
gcode:
  BEEP R=1

[gcode_macro _CUSTOM_PRE_LOAD_CLEAN]
gcode:
  BEEP R=1

[gcode_macro _CUSTOM_PRE_PID_Tune_Mode]
gcode:
  BEEP R=1

[gcode_macro _CUSTOM_PRE_UNLOAD]
gcode:
  BEEP R=1

[gcode_macro _CUSTOM_PRE_UNLOAD_CLEAN]
gcode:
  BEEP R=1

[gcode_macro _CUSTOM_POST_LOAD]
gcode:
  SET_DISPLAY_TEXT MSG="Filament has been loaded"
  RESPOND TYPE=COMMAND MSG="Filament has been loaded"
  BEEP R=2

[gcode_macro _CUSTOM_POST_LOAD_CLEAN]
gcode:
  SET_DISPLAY_TEXT MSG="Filament has been loaded"
  RESPOND TYPE=COMMAND MSG="Filament has been loaded"
  BEEP R=2

[gcode_macro _CUSTOM_POST_PID_Tune_Mode]
gcode:
  PUBLISH_ALERT PAYLOAD="PidFinished"
  BEEP R=2

[gcode_macro _CUSTOM_POST_UNLOAD]
gcode:
  SET_DISPLAY_TEXT MSG="Filament has been unloaded"
  RESPOND TYPE=COMMAND MSG="Filament has been unloaded"
  BEEP R=2

[gcode_macro _CUSTOM_POST_UNLOAD_CLEAN]
gcode:
  SET_DISPLAY_TEXT MSG="Filament has been unloaded"
  RESPOND TYPE=COMMAND MSG="Filament has been unloaded"
  BEEP R=2

[gcode_macro _FIL_CHANGE_PARK]
gcode: 
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  SET_DISPLAY_TEXT MSG="Moving to filament change position"
  RESPOND TYPE=COMMAND MSG="Moving to filament change position"
  PAUSE X={start_vars.filament_change_park_x} Y={start_vars.filament_change_park_y} Z_MIN={start_vars.filament_change_park_min_z} RESTORE=0
  _SAVE
  UNLOAD_FILAMENT

# [gcode_macro _INITIAL_SETUP]
# gcode:
#   # Assign feed rate according to a Demon variable (default value is 100)
#   {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
#   M220 S{start_vars.feed_rate}
#   RESPOND TYPE=COMMAND MSG="_INITIAL_SETUP: Ignoring flow rate and pa from Demon to get slicer values"

[gcode_macro _LOAD_FILAMENT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set core_vars = printer["gcode_macro _CORE_VARS"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(250)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(150)|int %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) and core_vars.prompt_running == True %} ####################
    RESPOND TYPE=command MSG="action:prompt_end"
  {% endif %}
  
    _MAX_EXTRUDE_CHECK
    
    SAVE_GCODE_STATE NAME=load_state

    _ENCODER_FEED_CHECK_PREP
    M400
    
  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_load == True %}
      _CUSTOM_PRE_LOAD {rawparams}
    {% endif %}
  {% endif %}

  {% if printer.print_stats.state not in ['printing', 'paused'] %} #and (printer.extruder.target <= printer.configfile.settings['extruder'].min_extrude_temp) %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
      {% if core_vars.last_known_z|float < 50|float %}
        Z_ASCENDER HEIGHT={(50 - core_vars.last_known_z|float)}
      {% endif %}

    {% else %}
      {% if printer.toolhead.position.z|float < start_vars.filament_change_park_min_z|float %}
        G90
        G0 Z{start_vars.filament_change_park_min_z|float} F3600
      {% endif %}
      G0 X{start_vars.filament_change_park_x|float} Y{start_vars.filament_change_park_y|float} F9000
    {% endif %}
      
    {% if 'TEMP' not in params %}
      {% if (printer.extruder.target == 0) or (printer.extruder.target < printer.configfile.settings['extruder'].min_extrude_temp) %}
        SET_DISPLAY_TEXT MSG="Load hotend heating..."
        RESPOND TYPE=COMMAND MSG="Load hotend heating..."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
        M117
      
      {% elif printer.extruder.target != 0 and printer.extruder.target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        SET_DISPLAY_TEXT MSG="Loading hotend..."
        RESPOND TYPE=COMMAND MSG="Loading hotend..."
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer.extruder.target|int -2} MAXIMUM={printer.extruder.target|int + 5} 
      {% endif %}

    {% else %}
      SET_DISPLAY_TEXT MSG="Load hotend heating to {temp}c"
      RESPOND TYPE=COMMAND MSG="Load hotend heating to {temp}c"
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
    {% endif %}
  {% endif %}
     
    M83
    G92 E0
    G1 E{start_vars.load_length|float} F{max_velocity|int}
    M400
    _ENCODER_FEED_CHECK
      
    G1 E{start_vars.load_purge_length|float} F{speed|int}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) and core_vars.prompt_running == True %} ####################
    {% if printer.print_stats.state not in ['printing', 'paused'] %}
      RESPOND TYPE=COMMAND MSG="Filament loaded via auto feeder, reducing nozzle temp to {cool_temp}"
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp}
    {% endif %}
    
    SET_GCODE_VARIABLE MACRO=_CORE_VARS VARIABLE=prompt_running VALUE=False
  {% endif %}  

  {% if cool|lower in ['yes', 'true'] %}
    {% if printer.print_stats.state not in ['printing', 'paused'] and (temp >= printer.configfile.settings['extruder'].min_extrude_temp) %}
      SET_DISPLAY_TEXT MSG="Post load hotend cooling..."
      RESPOND TYPE=COMMAND MSG="Post load hotend cooling..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp} 
      # {% if printer.extruder.target >= 50|int %}
      #   TEMPERATURE_WAIT SENSOR=extruder MINIMUM={cool_temp|int -2} MAXIMUM={cool_temp|int + 5}
      # {% endif %}
      M117

    {% elif printer.print_stats.state in ['printing', 'paused'] %}
      SET_DISPLAY_TEXT MSG="Load cooling denied, print in progress!"
      RESPOND TYPE=COMMAND MSG="Load cooling denied, print in progress!"
    {% endif %} 
  {% endif %}

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.post_load == True %}
       _CUSTOM_POST_LOAD {rawparams}
    {% endif %}
  {% endif %}

    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=True
    SAVE_VARIABLE VARIABLE=loaded_state VALUE=True
    RESTORE_GCODE_STATE NAME=load_state
  {% if "xyz" in printer.toolhead.homed_axes %}
    _SAVE
  {% endif %}

    M400
    SET_DISPLAY_TEXT MSG="LOAD_FILAMENT operation complete!"
    RESPOND TYPE=ECHO MSG="LOAD_FILAMENT operation complete!"

[gcode_macro _UNLOAD_FILAMENT]
gcode:
  {% set start_vars = printer["gcode_macro _START_VARIABLES"] %}
  {% set core_vars = printer["gcode_macro _CORE_VARS"] %}
  {% set ceal = printer["gcode_macro CUSTOM_EXPANSION_ACTIVE_LIST"] %}
  {% set speed = params.SPEED_MMsec|default(7)|float * 60 %}
  {% set temp = params.TEMP|default(250)|int %}
  {% set cool = params.COOL|default('No')|string %}
  {% set cool_temp = params.COOL_TEMP|default(150)|int %}
  {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity|int * 60 %}

    _MAX_EXTRUDE_CHECK
    
    SAVE_GCODE_STATE NAME=unload_state

    _ENCODER_FEED_CHECK_PREP
    M400
    
  {% if ceal.ceal_master_enable == True %}
    {% if ceal.pre_unload == True %}
      _CUSTOM_PRE_UNLOAD {rawparams}
    {% endif %}
  {% endif %}

  {% if printer.print_stats.state not in ['printing', 'paused'] %} #and (printer.extruder.target <= printer.configfile.settings['extruder'].min_extrude_temp) %}
    {% if "xyz" not in printer.toolhead.homed_axes %}
      {% if core_vars.last_known_z|float < 50|float %}
        Z_ASCENDER HEIGHT={(50 - core_vars.last_known_z|float)}
      {% endif %}

    {% else %}
      {% if printer.toolhead.position.z|float < start_vars.filament_change_park_min_z|float %}
        G90
        G0 Z{start_vars.filament_change_park_min_z|float} F3600
      {% endif %}
      G0 X{start_vars.filament_change_park_x|float} Y{start_vars.filament_change_park_y|float} F9000
    {% endif %}
  
    {% if 'TEMP' not in params %}
      {% if (printer.extruder.target == 0) or (printer.extruder.target < printer.configfile.settings['extruder'].min_extrude_temp) %}
        SET_DISPLAY_TEXT MSG="Unload hotend heating..."
        RESPOND TYPE=COMMAND MSG="Unload hotend heating..."
        SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
        M117
      
      {% elif printer.extruder.target != 0 and printer.extruder.target >= printer.configfile.settings['extruder'].min_extrude_temp %}
        SET_DISPLAY_TEXT MSG="Unloading hotend..."
        RESPOND TYPE=COMMAND MSG="Unloading hotend..."
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={printer.extruder.target|int -2} MAXIMUM={printer.extruder.target|int + 5} 
      {% endif %}

    {% else %}
      SET_DISPLAY_TEXT MSG="Unload hotend heating to {temp}c"
      RESPOND TYPE=COMMAND MSG="Unload hotend heating to {temp}c"
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={temp} 
      TEMPERATURE_WAIT SENSOR=extruder MINIMUM={temp|int -2} MAXIMUM={temp|int + 5}
    {% endif %}
  {% endif %}

    M83
    G92 E0
    G1 E{start_vars.unload_purge_length|float} F{max_velocity|int}
    
     _ENCODER_FEED_CHECK

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %} ####################
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
    M400
    G1 E-5 F{max_velocity|int}
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-5 SPEED={max_velocity|int / 60} SYNC=1
    M400
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True

  {% else %}
    G1 E-5 F{max_velocity|int}
  {% endif %}

    G4 P5000
    M400

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %} ####################
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=True
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=False
    M400
    G1 E-{start_vars.unload_length|float} F{max_velocity|int}
    BUFFER_STEPPER STEPPER=filament_buffer MOVE=-{start_vars.unload_length|float} SPEED={max_velocity|int / 60} SYNC=1
    M400
    SET_GCODE_VARIABLE MACRO=variables VARIABLE=is_manual_feeding VALUE=False
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True

  {% else %}
    G1 E-{start_vars.unload_length|float} F{max_velocity|int}
  {% endif %}

    M400

  {% if cool|lower in ['yes', 'true'] %}
    {% if printer.print_stats.state not in ['printing', 'paused'] and (temp >= printer.configfile.settings['extruder'].min_extrude_temp) %}
      SET_DISPLAY_TEXT MSG="Post unload hotend cooling..."
      RESPOND TYPE=COMMAND MSG="Post unload hotend cooling..."
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={cool_temp|int} 
      # {% if printer.extruder.target >= 50|int %}
      #   TEMPERATURE_WAIT SENSOR=extruder MINIMUM={cool_temp|int -2} MAXIMUM={cool_temp|int + 5}
      # {% endif %}
      M117

    {% elif printer.print_stats.state in ['printing', 'paused'] %}
      SET_DISPLAY_TEXT MSG="Unload cooling denied, print in progress!"
      RESPOND TYPE=COMMAND MSG="Unload cooling denied, print in progress!"
    {% endif %} 
  {% endif %}

  {% if ceal.ceal_master_enable == True %}
    {% if ceal.post_unload == True %}
      _CUSTOM_POST_UNLOAD {rawparams}
    {% endif %}
  {% endif %}

    SET_GCODE_VARIABLE MACRO=_POOP_VARIABLES VARIABLE=loaded_already VALUE=False
    SAVE_VARIABLE VARIABLE=loaded_state VALUE=False
    RESTORE_GCODE_STATE NAME=unload_state
  {% if "xyz" in printer.toolhead.homed_axes %}
    _SAVE
  {% endif %}

  {% if ('buffer_stepper filament_buffer' in printer.configfile.config) %}  ####################
    SET_GCODE_VARIABLE MACRO=_global_var VARIABLE=is_push_buffer VALUE=True
    _FEED_OUT_PROMPT
  {% endif %}

    M400
    SET_DISPLAY_TEXT MSG="UNLOAD_FILAMENT operation complete!"
    RESPOND TYPE=ECHO MSG="UNLOAD_FILAMENT operation complete!"

#######################
### PERSONAL MACROS ###
#######################

### BEEP
# Usage: BEEP [R=<number of beeps>]
[gcode_macro BEEP]
description: Performs R beep (default is 1)
gcode:
  {% if 'output_pin beeper' in printer.configfile.settings and printer["gcode_macro M300"] is defined %}
    {% set R = params.R|default(1)|int %}
    {% for i in range(R) %}
      M300 P200
      G4 P100
    {% endfor %}
  {% endif %}

### INPUT_SHAPER_TEST
# Usage: INPUT_SHAPER_TEST
[gcode_macro INPUT_SHAPER_TEST]
description: Configure Klipper to perform the input shaper test
gcode:
  SET_DISPLAY_TEXT MSG="Setting Klipper to perform the input shaper test"
  RESPOND TYPE=COMMAND MSG="Setting Klipper to perform the input shaper test"
  RESPOND TYPE=COMMAND MSG="Remember to set max_accel: 3000 in your printer.cfg"
  SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO=0
  SET_PRESSURE_ADVANCE ADVANCE=0
  {% if printer.configfile.config["input_shaper"] is defined %}
    RESPOND TYPE=COMMAND MSG="Input shaper already configured. Setting it to zero"
    SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
  {% endif %}
  TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=600 STEP_DELTA=300 STEP_HEIGHT=5
  SET_DISPLAY_TEXT MSG="Klipper is now configured to print the input shaper test"
  RESPOND TYPE=COMMAND MSG="Klipper is now configured to print the input shaper test"

### M300
# Usage: M300 [P=<beep duration in ms>]
[gcode_macro M300]
description: Performs a beep with a duration of P ms (default is 100 ms)
gcode:
  {% set P = params.P|default(100)|float %}
  SET_PIN PIN=beeper VALUE=1
  G4 P{P}
  SET_PIN PIN=beeper VALUE=0

### PUBLISH_ALERT
# Usage: PUBLISH_ALERT [PAYLOAD=<payload>]
[gcode_macro PUBLISH_ALERT]
description: Publish a MQTT message with topic 'klipper/alert'
gcode:
  {% set data = params.PAYLOAD|default(None) %}
  {action_call_remote_method("publish_mqtt_topic",
                             topic="klipper/alert",
                             payload=data,
                             qos=0,
                             retain=False,
                             use_prefix=False)}

### TOTAL_SHUTDOWN
# Usage: TOTAL_SHUTDOWN
[gcode_macro TOTAL_SHUTDOWN]
description: Shutdown the Raspberry Pi in a controlled way, and then the 3D printer
gcode:
  PUBLISH_ALERT PAYLOAD="TotalShutdown"