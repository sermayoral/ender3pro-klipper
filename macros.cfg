##############################
### OVERRIDE BUNDLE MACROS ###
##############################

### _USER_END_PRINT_BEFORE_HEATERS_OFF
# Location: macros_print_end_print.cfg
[gcode_macro _USER_END_PRINT_BEFORE_HEATERS_OFF]
gcode:
  G1 E-3 F1800; Retract filament to prevent residue from remaining on the piece

### LOAD_FILAMENT
# Location: macros_filament_basics.cfg
[gcode_macro LOAD_FILAMENT]
description: Loads new filament. Note: be careful with PETG, make sure you inspect the tip of your filament before loading to avoid jams.\n Carga filamento nuevo. Nota: cuidado con el PETG, asegurate de inspeccionar la punta del filamento antes de cargarlo para evitar atascos.
gcode:
  SAVE_GCODE_STATE NAME=load_state
  G91
  # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
  {% if params.TEMP is defined or not printer.extruder.can_extrude %}
    
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}"

    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}

  {% set load_speed = printer["gcode_macro GLOBAL_VARS"].filament_load_speed|float * 60 %}
  {% set load_low_speed = printer["gcode_macro GLOBAL_VARS"].filament_load_low_speed|float * 60 %}
  {% set load_length = printer["gcode_macro GLOBAL_VARS"].filament_load_length|float %}
  
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_filament}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_filament}"

  # Load the filament into the hotend area.
  {% if printer.configfile.settings.extruder.max_extrude_only_distance < printer["gcode_macro GLOBAL_VARS"].filament_load_length %}
    M117 ERROR max_extrude_only_distance
    RESPOND MSG="Max Extrude Only Distance minor to Load Lengh... Setting Load Lengh to Max Extrude Only Distance... Please set your [extruder] section to correct max_extrude_only_distance"
  {% else %}
     G1 E{load_length * 3 / 4} F{load_speed} # Extrude fast
     G4 P1000                                # Wait 1 second
     G1 E{load_length / 4} F{load_low_speed} # Extrude slow
     M400                                    # Wait until extrusion is finished
     M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_ok}
     RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_load_ok}"
  {% endif %}

  RESTORE_GCODE_STATE NAME=load_state

### UNLOAD_FILAMENT
# Location: macros_filament_basics.cfg
[gcode_macro UNLOAD_FILAMENT]
description: Unloads the filament. Note: be careful with PETG, make sure you inspect the tip of your filament before reloading to avoid jams.\N Descarga el filamento. Nota: cuidado con el PETG, asegurate de inspeccionar la punta del filamento antes de recargar para evitar atascos.
gcode:
  SAVE_GCODE_STATE NAME=unload_state
  G91
  {% if params.TEMP is defined or not printer.extruder.can_extrude %}
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_heating_extruder}"

    # Heat up hotend to provided temp or 220 as default as that should work OK with most filaments.
    M104 S{params.TEMP|default(220, true)}
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={params.TEMP|default(220, true)}
  {% endif %}

  {% set unload_speed = printer["gcode_macro GLOBAL_VARS"].filament_unload_speed|float * 60 %}
  {% set unload_low_speed = printer["gcode_macro GLOBAL_VARS"].filament_unload_low_speed|float * 60 %}
  {% set unload_length = printer["gcode_macro GLOBAL_VARS"].filament_unload_length|float %}
  
  M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}
  RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_filament}"
  
  {% if printer.configfile.settings.extruder.max_extrude_only_distance < printer["gcode_macro GLOBAL_VARS"].filament_unload_length %}
    M117 ERROR max_extrude_only_distance
    RESPOND MSG="Max Extrude Only Distance minor to Unload Lengh... Setting Unload Lengh to Max Extrude Only Distance... Please set your [extruder] section to correct max_extrude_only_distance"
  {% else %}
    G1 E2 F{unload_low_speed}                    # Extrude a bit
    G1 E-{unload_length / 4} F{unload_low_speed} # Retract slow
    G1 E-{unload_length * 3 / 4} F{unload_speed} # Retract fast
    M400                                         # Wait until retraction is finished
    M117 {printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_ok}
    RESPOND MSG="{printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_ok ~ printer["gcode_macro LANGUAGE_GLOBAL_VARS"].msg_unload_ok_tip}"
  {% endif %}
  
  RESTORE_GCODE_STATE NAME=unload_state

#######################
### PERSONAL MACROS ###
#######################

### BEEP
# Usage: BEEP [R=<number of beeps>]
[gcode_macro BEEP]
description: Performs R beep (default is 1)
gcode:
  {% if 'output_pin beeper' in printer.configfile.settings and printer["gcode_macro M300"] is defined %}
    {% set R = params.R|default(1)|int %}
    {% for i in range(R) %}
      M300 P200
      G4 P100
    {% endfor %}
  {% endif %}

### G29
# Usage: G29
[gcode_macro G29]
description: Performs a bed mesh calibrate saving default profile
gcode:
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  BED_MESH_PROFILE SAVE=default
  BED_MESH_PROFILE LOAD=default

### T_LOAD_FILAMENT
# Usage: T_LOAD_FILAMENT [TYPE=<material type>]
[gcode_macro T_LOAD_FILAMENT]
description: Loads the filament setting the right temperature by material type
gcode:
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    LOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
  {% else %}
    M117 ERROR Unknown type: {TYPE}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}

### T_UNLOAD_FILAMENT
# Usage: T_UNLOAD_FILAMENT [TYPE=<material type>]
[gcode_macro T_UNLOAD_FILAMENT]
description: Unloads the filament setting the right temperature by material type
gcode:
  # Home all axis
  G28
  # Subimos el eje Z
  G91
  G1 Z+40 F1500
  G90
  {% set TYPE = params.TYPE|default("PLA")|string %}
  {% if TYPE == "PLA" %}
    UNLOAD_FILAMENT TEMP={printer["gcode_macro GLOBAL_VARS"].preheat_pla_temp}
    BEEP R=3
  {% else %}
    M117 ERROR Unknown type: {TYPE}
    RESPOND TYPE=error MSG='Unknown type: {TYPE}'
  {% endif %}

### M300
# Usage: M300 [P=<beep duration in ms>]
[gcode_macro M300]
description: Performs a beep with a duration of P ms (default is 100 ms)
gcode:
  {% set P = params.P|default(100)|float %}
  SET_PIN PIN=beeper VALUE=1
  G4 P{P}
  SET_PIN PIN=beeper VALUE=0
